plugins {
    id 'java'
    alias(libs.plugins.springDependencyManagementPlugin) apply(true)
    alias(libs.plugins.springBootPlugin) apply(true)
}

dependencies {
    api project(':greetingLibrary')
    api libs.bundles.springBootWeb

    annotationProcessor libs.springBootAnnotationProcessor

    testImplementation libs.springBootStarterTest
}

// -- Copy frontend artifacts to static folder
tasks.register('cleanStatic', Delete) {
    delete "${projectDir}/src/main/resources/static"
}

clean.dependsOn cleanStatic

tasks.register('copyFrontendArtifacts', Copy) {
    dependsOn ':helloUI:clean', ':helloUI:npmBuild'
    from "${project(':helloUI').projectDir}/dist"
    into "${projectDir}/src/main/resources/static"
    onlyIf {
        file("${project(':helloUI').projectDir}/dist").exists()
    }
}

processResources.dependsOn copyFrontendArtifacts

bootJar.dependsOn processResources

// -- Publish project JAR to S3
tasks.register('publish') {
    dependsOn 'bootJar'
    doFirst {
        println "Publishing"
    }
}

tasks.register('defaultSingleFileUpload', S3Upload) {
    dependsOn 'bootJar'
    println "Uploading to S3: ${project.name}-${project.version}.jar"
    key = "${project.name}/${project.name}-${project.version}.jar"
    file = "${projectDir}/build/libs/${project.name}-${project.version}.jar"
    overwrite = true
}

tasks.named('publish') {
    dependsOn 'defaultSingleFileUpload'
}

springBoot {
    buildInfo()
}

bootJar {
    manifest {
        attributes("Implementation-Version": project.version)
    }
}

tasks.named('sourcesJar') {
    dependsOn copyFrontendArtifacts
}
